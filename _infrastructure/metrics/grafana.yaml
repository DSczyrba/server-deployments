apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: metrics
  labels:
    app: grafana
spec:
  replicas: 1
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana-oss:8.5.14
          ports:
            - containerPort: 3000
              name: web
          env:
            - name: GF_AUTH_GENERIC_OAUTH_ENABLED
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_NAME
              value: authentik
            - name: GF_AUTH_GENERIC_OAUTH_SCOPES
              value: openid profile email
            - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
              value: "https://sso.jemand771.net/application/o/authorize/"
            - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
              value: "https://sso.jemand771.net/application/o/token/"
            - name: GF_AUTH_GENERIC_OAUTH_API_URL
              value: "https://sso.jemand771.net/application/o/userinfo/"
            - name: GF_AUTH_SIGNOUT_REDIRECT_URL
              value: "https://sso.jemand771.net/application/o/grafana/end-session/"
            - name: GF_AUTH_OAUTH_AUTO_LOGIN
              value: "true"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.771.blue"
            - name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
              value: "contains(groups[*], 'grafana-admin') && 'Admin' || contains(groups[*], 'grafana-edit') && 'Editor' || 'Viewer'"
          envFrom:
            - secretRef:
                name: grafana-oauth
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
      restartPolicy: Always
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: grafana-data
  selector:
    matchLabels:
      app: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: metrics
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: grafana
  namespace: metrics
spec:
  rules:
    - host: grafana.771.blue
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: grafana-data
  namespace: metrics
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
